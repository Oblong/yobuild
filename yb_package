#!/bin/sh
# Copyright 2014 Oblong, Inc
# License: MIT
#
# Create tarball $YB_OUTDIR/$name.tar.gz with the contents of $DESTDIR, ready for unpacking on target system.

set -e
set -x

#--------------- Default Values ----------------------------

# PREFIX is where packages will live once finally installed
PREFIX=${PREFIX:-/opt/yobuild}

# DESTDIR is where the package will be temporarily installed to
DESTDIR=${DESTDIR:-../yobuild.tmp}

YB_OUTDIR=${YB_OUTDIR:-../outdir}

#--------------- Functions ----------------------------

is_ubuntu() {
    test -f /etc/issue
}

is_win() {
    test -d /cygdrive/c/windows
}

do_fixups() {
    # Oh, my aching ABI
    # When building on a machine with macports' perl installed,
    # any script that references perl or perl5 will fail to execute on
    # a normal mac machine unless we rewrite it to use the
    # standard perl path.
    # concatenate string so we don't fix ourself up in do_yobuild_build
    find "$DESTDIR" -type f -print0 | xargs -0 grep -l '/opt''/local/bin/perl' > fixups.$$.tmp || true
    if test -s fixups.$$.tmp
    then
        echo Relocating perl in `cat fixups.$$.tmp | tr '\012' ' '` so the scripts can keep working on non-macports systems
        # concatenate string so we don't fix ourself up in do_yobuild_build
        sed -i.bak 's,/opt''/local/bin/perl5*,/usr/bin/perl,g' `cat fixups.$$.tmp`
    fi
    rm fixups.$$.tmp
}

do_package() {
    mkdir -p $YB_OUTDIR

    name=$1
    do_fixups
    prefix=`echo $PREFIX | sed 's,^/,,'`
    tarball=$YB_OUTDIR/${name}.tar.gz
    # Alas, fakeroot sh -c "cmd1; cmd2" is not reliable, so make a shell script.
    if is_ubuntu
    then
        group=root
    else
        group=wheel
    fi
    MAKETAR=`mktemp -t maketar.sh.XXXXXXXXXX`
    echo "cd $DESTDIR; chown -R root:$group $prefix; tar -czvf $tarball $YB_TAR_ARGS $prefix" > $MAKETAR
    if test $FAKEROOTKEY || is_win
    then
        # nested fakeroot not needed, which is good, since it currently doesn't work
        sh $MAKETAR
    else
        fakeroot sh $MAKETAR
    fi
    rm $MAKETAR
}


usage() {
    set +x
    cat << _EOF_
Usage: $0 name
Creates tarball $YB_OUTDIR/\$name.tar.gz with the contents of $DESTDIR, ready for unpacking on target system.
(And then unpack it on the build system?!  FIXME: stop doing that once dependencies are working!)

Environment variables which may be overridden:
PREFIX ($PREFIX)
DESTDIR ($DESTDIR)
YB_OUTDIR ($YB_OUTDIR)
_EOF_
}

case $1 in
-h|--help)
    usage; exit 0;;
""|-*)
    usage; exit 1;;
*)
    do_package $1;;
esac
